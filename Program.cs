using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Задание2
{
     class Zadanie2
    {
       

        static void Main()
        {
          /*
          Попробуем написать программу
           которая высчитывает значение 
          корней квадратного уравнения
           Решение будем описывать
          через дискриминант, но с возможными
          ошибками ввода пользователя в строку
          ввиде нулевых коэффицентов
          */


            int x,a,b=0,c=0,D;
            float x1=0, x2=0,y=0;
            const byte Four = 4; 


            Console.WriteLine("Здравствуйте!С помощью этой программы вы сможете решить квадратное уравнение через дискриминант и найти его корни");
            Console.WriteLine("Уравнение должно иметь вид ax^2+bx+c=0, для этого давайте последовательно введём необходимые коэффиценты!");


            Console.WriteLine("Введите a: ");
            a = Convert.ToInt32(Console.ReadLine());
            //Если a=0, то уравнение уже не будет являться квадратным и не подходит под наш алгоритм
            if (a == 0)
            {
                Console.WriteLine("Данное уравнение не является квадратным! Введите другой коэффицент");
                return;
            }



            //ввод коэффицентов с клавиатуры пользователем

            Console.WriteLine("Введите b: ");
            b = Convert.ToInt32(Console.ReadLine());


            Console.WriteLine("Введите c: ");
            c = Convert.ToInt32(Console.ReadLine());


            Console.WriteLine("Полученное уравнение: " + a + "x^2+(" + b + ")x+(" + c + ")=0");
           

         
            //Если коэффицент b=0
            if (b == 0)
            {
                if (c>0)
                {
                    Console.WriteLine("В уравнении нет действительных корней, подкоренное выражение не может быть отрицательным!");
                    return;
                    
                }
                else {
                    y = (0-c) / a;
                    x1 = (float)Math.Sqrt(y); 
                    x2 = (float)-Math.Sqrt(y);
                    if(x1== 0 && x2 == 0){
                        Console.WriteLine("Уравнение имеет единственный корень - 0");
                    }
                   
                    Console.WriteLine("Первый корень уравнения x1 - " + x1 + ".   " + "Второй корень уравнения x2 - " + x2);
                    return;
                    }
                }
            //Теперь попробуем описать случай, если коэффицент с=0

            if (c == 0)
            {
                //разобьём на 2 уравнения и решим по отдельности, в одном из которых у нас получится 0, а в другом численное решение
                x2 = -b / a;
                Console.WriteLine("В данном уравнении один корень = " + x2);
                return;
            }




            //Здесь опишем алгоритм для решения уравнения через дискриминант
            D = (int)(Math.Pow(b, 2) - (Four * a * c));
            if (D<0)
            {
                Console.WriteLine("В уравнении нет действительных корней");
            }
            else if (D==0)
            {
                x = (-b) / (2 * a);
                Console.WriteLine("Уравнение имеет единственный корень - " + x);
            }
            else
            {
                 x1 = (float)(((-b) + Math.Sqrt(D)) / (2 * a));
                 Console.WriteLine("Первый корень нашего уравнения - " + x1);
                 x2 = (float)(((-b) - Math.Sqrt(D)) / (2 * a));
                 Console.WriteLine("Второй корень - " + x2);
            }

            //Надеюсь, что не разочаровал тех, кто заинтересовался моей работой :). Дальше-больше!

        }
    }
}
